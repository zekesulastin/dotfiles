#!/usr/bin/env bash

alias less=$PAGER
alias zless=$PAGER
alias ls='ls --color=auto'
alias du1='du -h --max-depth=1'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias grep='grep --color=auto'
alias msi='makepkg -si'
alias syu='pacaur -Syu'
alias auau='sudo aptitude update && sudo aptitude upgrade'
alias winej='WINEDEBUG=-all LC_ALL=ja_JP.utf8 wine'
alias xrl='xrandr --output DVI-D-0 --rotate left'
alias xrn='xrandr --output DVI-D-0 --rotate normal'
alias ix="curl -sF 'f:1=<-' http://ix.io"
alias fluidstart="(nohup fluidsynth -is -a pulseaudio -r 44100 soundfont-unison /usr/share/soundfonts/Unison.sf2 >/dev/null 2>&1 &)"
alias fluidstop="pkill fluidsynth"
alias midiplay="aplaymidi --port 128:0"
alias mpt="mplayer -ao pulse:tsukikage"
alias mpm="mplayer -ao pulse:meiousei"
alias mpo="mplayer -ao pulse:okaasan"

powerdown () {
	case "$HOSTNAME" in
		"tsukikage" )
			pkill firefox
			poweroff ;;
		"meiousei" )
			sudo shutdown -h now ;;
		"hoshiakari" )
			echo >&2 "powerdown: this is your SERVER, br0" && return 255;;
		* )
			echo >&2 "powerdown: no defined behavior for this host" && return 1;;
	esac
}

if [[ "$HOSTNAME" != "hoshiakari" ]]; then
	alias ncmpcpp="ssh hoshiakari -t 'LC_ALL=en_US.UTF-8 ncmpcpp' 2>/dev/null" ;
fi

pl () {
	# Default action is playlist display/manipulation
	# action `o' automates pulse output selection
	case "$1" in
		"" )
		# Prints the current playlist, numbered, with the current song in
		#	green if playing, yellow if paused, red if stopped (not entirely reliable)
		# In the tradition of horrid hacks everywhere (and because mpc status doesn't return)
		#	anything useful if mpd is stopped), this is accomplished by telnetting into the
		#	remote mpd and loading up an associative array, then abusing grep.
			declare -A _status
			_status=()
			while read -r; do
				[[ ! "$REPLY" ]] && break
				_status+=( ["${REPLY%%: *}"]="${REPLY#*: }" )
			done < <((echo "status"; echo "currentsong"; sleep .1; echo "q"; echo "close") |\
				 telnet -e q $MPD_HOST 6600) # sleep .1 is the shortest reliable sleep time
			_status+=( ["0"]="${_status[Artist]} - ${_status[Title]} - ${_status[Album]}" )
			case "${_status[state]}" in
				"play" )
					mpc playlist -f "[%artist% - ]%title%[[ - %album%][ (%time%)]]" |\
						GREP_COLORS="ms=01;32:sl=32:se=30:ln=36"\
						grep -nFTC 1000 --color "${_status[0]}" ;;
				"pause" )
					mpc playlist -f "[%artist% - ]%title%[[ - %album%][ (%time%)]]" |\
					 	GREP_COLORS="ms=01;33:sl=33:se=30:ln=36"\
						grep -nFTC 1000 --color "${_status[0]}" ;;
				* )
					mpc playlist -f "[%artist% - ]%title%[[ - %album%][ (%time%)]]" |\
						GREP_COLORS="ms=01;31:sl=31:se=30:ln=36"\
						grep -nFTC 1000 --color "${_status[0]}" ;;
			esac ;;
		[0-9]* )
			mpc play -f "[%artist% - ]%title%[ - %album%]" "$1" | head -n 1 ;;
		o[0-9]* )
			mpc enable "${1#o}" | GREP_COLORS="ms=01;32:sl=01;32:se=30:ln=36"\
				grep -C 1000 --color enabled ;;
		od[0-9]* )
			mpc disable "${1#od}" | GREP_COLORS="ms=01;32:sl=01;32:se=30:ln=36"\
				grep -C 1000 --color enabled ;;
		os )
		# s as in `self'
		# Iterates through the (hardcoded) PA outputs, disables them, then
		#	re-enables the output matching the current system's hostname.
			local _self_output=""
			for i in {3..6}; do mpc disable $i > /dev/null; done
			_self_output="$(mpc outputs | grep "$HOSTNAME")"
			mpc enable ${_self_output:7:2} | GREP_COLORS="ms=01;32:sl=01;32:se=30:ln=36"\
				grep -C 1000 --color enabled ;;
		o )
			mpc outputs | GREP_COLORS="ms=01;32:sl=01;32:se=30:ln=36"\
				grep -C 1000 --color enabled ;;
		* )
			mpc "$@" ;;
	esac
}
complete -o nospace -F _mpc pl
